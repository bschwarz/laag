name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 2.1.0)'
        required: true
        type: string
      tag:
        description: 'NPM tag (latest, beta, alpha)'
        required: false
        default: 'latest'
        type: choice
        options:
          - latest
          - beta
          - alpha
      dry_run:
        description: 'Dry run (do not actually publish)'
        required: false
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # for npm provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run quality checks
        run: bun run quality

      - name: Run tests
        run: bun test --recursive

      - name: Build packages
        run: bun run build

      - name: Extract version from tag
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        id: extract_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Set version for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        id: manual_version
        run: echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT

      - name: Update package versions
        run: |
          VERSION="${{ steps.extract_version.outputs.version || steps.manual_version.outputs.version }}"
          TAG="${{ github.event.inputs.tag || 'latest' }}"
          DRY_RUN="${{ github.event.inputs.dry_run == 'true' && '--dry-run' || '' }}"

          echo "Releasing version: $VERSION with tag: $TAG"
          bun run scripts/release.ts --version="$VERSION" --tag="$TAG" $DRY_RUN
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && !github.event.inputs.dry_run
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          body: |
            ## Changes in ${{ steps.extract_version.outputs.version }}

            See [CHANGELOG.md](https://github.com/bschwarz/laag/blob/main/CHANGELOG.md) for details.

            ### Packages Published
            - @laag/core@${{ steps.extract_version.outputs.version }}
            - @laag/openapi@${{ steps.extract_version.outputs.version }}
            - @laag/raml@${{ steps.extract_version.outputs.version }}
